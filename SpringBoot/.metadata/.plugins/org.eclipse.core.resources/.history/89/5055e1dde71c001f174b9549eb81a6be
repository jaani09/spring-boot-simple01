package com.rays.dao;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.criteria.CriteriaBuilder;
import javax.persistence.criteria.CriteriaQuery;
import javax.persistence.criteria.Root;

import org.springframework.stereotype.Repository;

import com.rays.dto.UserDTO;

@Repository
public class UserDAO {
	
	@PersistenceContext
	public EntityManager entityManager;
	
	public long add(UserDTO dto) {
		entityManager.persist(dto);
		return dto.getId();
		
	}
	public void update(UserDTO dto) {
		entityManager.merge(dto);
		
	}
	public void delete(UserDTO dto) {
		entityManager.remove(dto);
	}
	public UserDTO findByPk(long pk) {
		entityManager.find(UserDTO.class, pk);
		return null;
		
	}
	public UserDTO findByUniqueKey(String atribute , String value) {
	CriteriaBuilder builder	= entityManager.getCriteriaBuilder();
	   CriteriaQuery<UserDTO> cq = builder.createQuery(UserDTO.class);
	          Root<UserDTO> qRoot= cq.from(UserDTO.class);
	 builder.equal(qRoot.get(attribute), y)
	return null;
		
	}

}
